package com.caipeichao.leetcode;

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import static org.testng.Assert.*;

public class Solution16Test {

    @Test(dataProvider = "a")
    public void testThreeSumClosest(String input, int target, int expect) throws Exception {
        int[] nums = TestUtils.parseJsonArray(input);
        int actual = new Solution16().threeSumClosest(nums, target);
        assertEquals(actual, expect);
    }

    @DataProvider(name = "a")
    public Object[][] provide() {
        return new Object[][]{
                new Object[]{"[1,2,4,8,16,32,64,128]", 82, 82},
                new Object[]{"[-1,2,1,-4]", -4, -4},
                new Object[]{"[-1,2,1]", 3, 2},
                new Object[]{"[-1,2,1,-4]", 3, 2},
                new Object[]{"[-1,2,1,-4]", 2, 2},
                new Object[]{"[-1,2,1,-4]", 1, 2},
                new Object[]{"[-1,2,1,-4]", 0, -1},
                new Object[]{"[-1,2,1,-4]", -1, -1},
                new Object[]{"[-1,2,1,-4]", -2, -1},
                new Object[]{"[-1,2,1,-4]", -3, -3},
                new Object[]{"[-1,2,1,-4]", -5, -4},
                new Object[]{"[-1,2,1,-4]", -6, -4},
                new Object[]{"[-1,2,1,-4]", -7, -4},
                new Object[]{"[0,-1,2,1,-4,1,2,3,4,5]", -8, -5},
                new Object[]{"[-1,0,2,1,-4,1,2,3,4,5]", -8, -5},
                new Object[]{"[-1,2,0,1,-4,1,2,3,4,5]", -8, -5},
                new Object[]{"[-1,2,1,0,-4,1,2,3,4,5]", -8, -5},
                new Object[]{"[-1,2,1,-4,0,1,2,3,4,5]", -8, -5},
                new Object[]{"[-1,2,1,-4,1,0,2,3,4,5]", -8, -5},
                new Object[]{"[-1,2,1,-4,1,2,0,3,4,5]", -8, -5},
                new Object[]{"[-1,2,1,-4,1,2,3,0,4,5]", -8, -5},
                new Object[]{"[-1,2,1,-4,1,2,3,4,0,5]", -8, -5},
                new Object[]{"[-1,2,1,-4,1,2,3,4,5,0]", -8, -5},
                new Object[]{"[43,75,-90,47,-49,72,17,-31,-68,-22,-21,-30,65,88,-75,23,97,-61,53,87,-3,33,20,51,-79,43,80,-9,34,-89,-7,93,43,55,-94,29,-32,-49,25,72,-6,35,53,63,6,-62,-96,-83,-73,66,-11,96,-90,-27,78,-51,79,35,-63,85,-82,-15,100,-82,1,-4,-41,-21,11,12,12,72,-82,-22,37,47,-18,61,60,55,22,-6,26,-60,-42,-92,68,45,-1,-26,5,-56,-1,73,92,-55,-20,-43,-56,-15,7,52,35,-90,63,41,-55,-58,46,-84,-92,17,-66,-23,96,-19,-44,77,67,-47,-48,99,51,-25,19,0,-13,-88,-10,-67,14,7,89,-69,-83,86,-70,-66,-38,-50,66,0,-67,-91,-65,83,42,70,-6,52,-21,-86,-87,-44,8,49,-76,86,-3,87,-32,81,-58,37,-55,19,-26,66,-89,-70,-69,37,0,19,-65,38,7,3,1,-96,96,-65,-52,66,5,-3,-87,-16,-96,57,-74,91,46,-79,0,-69,55,49,-96,80,83,73,56,22,58,-44,-40,-45,95,99,-97,-22,-33,-92,-51,62,20,70,90]", 284, 284},
                new Object[]{"[-43,61,-62,24,73,64,-23,94,-65,-27,24,-56,8,54,0,19,-100,-64,-53,6,-22,13,-18,55,-41,37,34,-43,0,-8,-95,76,73,21,-93,16,98,60,70,-32,30,-7,-27,-73,79,-26,41,32,41,-5,82,-14,50,-94,22,62,60,-48,51,12,-34,68,-40,-20,-20,46,46,-79,1,82,-98,41,-79,-43,-76,-25,-94,-16,-25,46,-95,-79,53,-1,-30,43,93,17,72,66,83,-89,-16,42,40,87,-46,40,22,85,-91,46,-77,19,-56,-28,8,47,-20,65,8,60,-49,-86,-74,56,30,79,97,-89,14,-90,66,-12,-57,46,-61,87,72,13,75,75,36,79,-16,84,-49,-86,76,68,-8,-65,-86,-11,55,-69,-59,34,63,59,-11,43,16,7,93,57,-55,2,38,64,3,22,-9,-22,-34,-84,90,-71,-88,64,-19,13,-8,-81,-95,-38,-9,-25,82,57,60,-26,66,21,8,65,-38,-68,-59,24,91]", -231, -231},
        };
    }
}
