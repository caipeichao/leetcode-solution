package com.caipeichao.leetcode;

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import java.util.List;

import static org.testng.Assert.*;

public class Solution90Test {

    @Test(dataProvider = "a")
    public void testSubsetsWithDup(String input, String expect) throws Exception {
        int[] input2 = TestUtils.parseJsonArray(input);
        List<List<Integer>> result = new Solution90().subsetsWithDup(input2);
        String actual = TestUtils.toJsonString(result);
        assertEquals(actual, expect);
    }

    @DataProvider(name = "a")
    public Object[][] provide() {
        return new Object[][]{
                new Object[]{"[]", "[[]]"},
                new Object[]{"[1,2,3,4,5]", "[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3],[4],[1,4],[2,4],[1,2,4],[3,4],[1,3,4],[2,3,4],[1,2,3,4],[5],[1,5],[2,5],[1,2,5],[3,5],[1,3,5],[2,3,5],[1,2,3,5],[4,5],[1,4,5],[2,4,5],[1,2,4,5],[3,4,5],[1,3,4,5],[2,3,4,5],[1,2,3,4,5]]"},
                new Object[]{"[1,2,3,3,3,4,5]", "[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3],[3,3],[1,3,3],[2,3,3],[1,2,3,3],[3,3,3],[1,3,3,3],[2,3,3,3],[1,2,3,3,3],[4],[1,4],[2,4],[1,2,4],[3,4],[1,3,4],[2,3,4],[1,2,3,4],[3,3,4],[1,3,3,4],[2,3,3,4],[1,2,3,3,4],[3,3,3,4],[1,3,3,3,4],[2,3,3,3,4],[1,2,3,3,3,4],[5],[1,5],[2,5],[1,2,5],[3,5],[1,3,5],[2,3,5],[1,2,3,5],[3,3,5],[1,3,3,5],[2,3,3,5],[1,2,3,3,5],[3,3,3,5],[1,3,3,3,5],[2,3,3,3,5],[1,2,3,3,3,5],[4,5],[1,4,5],[2,4,5],[1,2,4,5],[3,4,5],[1,3,4,5],[2,3,4,5],[1,2,3,4,5],[3,3,4,5],[1,3,3,4,5],[2,3,3,4,5],[1,2,3,3,4,5],[3,3,3,4,5],[1,3,3,3,4,5],[2,3,3,3,4,5],[1,2,3,3,3,4,5]]"},
                new Object[]{"[5,2,3,3,4,7,7]", "[[],[2],[3],[2,3],[3,3],[2,3,3],[4],[2,4],[3,4],[2,3,4],[3,3,4],[2,3,3,4],[5],[2,5],[3,5],[2,3,5],[3,3,5],[2,3,3,5],[4,5],[2,4,5],[3,4,5],[2,3,4,5],[3,3,4,5],[2,3,3,4,5],[7],[2,7],[3,7],[2,3,7],[3,3,7],[2,3,3,7],[4,7],[2,4,7],[3,4,7],[2,3,4,7],[3,3,4,7],[2,3,3,4,7],[5,7],[2,5,7],[3,5,7],[2,3,5,7],[3,3,5,7],[2,3,3,5,7],[4,5,7],[2,4,5,7],[3,4,5,7],[2,3,4,5,7],[3,3,4,5,7],[2,3,3,4,5,7],[7,7],[2,7,7],[3,7,7],[2,3,7,7],[3,3,7,7],[2,3,3,7,7],[4,7,7],[2,4,7,7],[3,4,7,7],[2,3,4,7,7],[3,3,4,7,7],[2,3,3,4,7,7],[5,7,7],[2,5,7,7],[3,5,7,7],[2,3,5,7,7],[3,3,5,7,7],[2,3,3,5,7,7],[4,5,7,7],[2,4,5,7,7],[3,4,5,7,7],[2,3,4,5,7,7],[3,3,4,5,7,7],[2,3,3,4,5,7,7]]"},
                new Object[]{"[1,1,1,1,1,1,1]", "[[],[1],[1,1],[1,1,1],[1,1,1,1],[1,1,1,1,1],[1,1,1,1,1,1],[1,1,1,1,1,1,1]]"},
        };
    }
}